# ===============================
# APPLICATION SETTING
# ===============================
spring.application.name=authentication-service
server.port=2631

# ===============================
# EUREKA CLIENT
# ===============================
eureka.client.serviceUrl.defaultZone=http://${EUREKA_USER:eureka}:${EUREKA_PASSWORD:password}@${DISCOVERY_SERVER:localhost:8761}/eureka

## ===============================
## ZIPKIN SERVER
## ===============================
spring.zipkin.base-url=${ZIPKIN_SERVER:http://localhost:9411}
spring.sleuth.sampler.probability=1.0

# ===============================
# SPRING ACTUATOR & PROMETHEUS
# ===============================
management.endpoints.web.exposure.include=prometheus
management.endpoint.shutdown.enabled=true

## ===============================
## OpenAPI Definition
## ===============================
springdoc.api-docs.path=${API_DOCS_PATH:/api-docs}
api.info.version=${API_INFO_VERSION:1.0}
api.info.terms-of-service=${API_INFO_TERMS:https://software.com.vn/terms/}
api.info.contact.name=${API_INFO_CONTACT_NAME:SOFTWARE CO., LTD}
api.info.contact.email=${API_INFO_CONTACT_EMAIL:contact@software.com.vn}
api.info.contact.url=${API_INFO_CONTACT_URL:https://software.com.vn/}
api.info.license.name=${API_INFO_LICENSE_NAME:Apache 2.0}
api.info.license.url=${API_INFO_LICENSE_URL:http://www.apache.org/licenses/LICENSE-2.0.html}
api.info.title=Authentication API Service
api.info.description=API to authenticate user for application

# ===============================
# SPRING SECURITY
# ===============================
spring.security.user.name=Authentication
spring.security.user.password=AuthPassword

# ===============================
# JSON WEB TOKEN
# ===============================
jwt.secret=${JWT_SECRET:Api@Secret.Key}
# expire token within 60 minutes
jwt.token.validity=${JWT_TOKEN_VALIDITY:60}
# refresh token within 7 days
jwt.refresh.token.validity=${JWT_REFRESH_TOKEN_VALIDITY:7}
# reset token within 60 minutes
jwt.reset.token.validity=${JWT_RESET_TOKEN_VALIDITY:60}

# ===============================
# REDIS CACHE
# ===============================
redis.host=${REDIS_HOST:localhost}
redis.port=${REDIS_PORT:6379}

# ===============================
# DATABASE
# ===============================
spring.datasource.url=jdbc:postgresql://${POSTGRES_URL:localhost:5432/postgres}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:password}

# ===============================
# JPA / HIBERNATE
# ===============================
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update

# ===============================
# Tuning Hikari Pool
# 1000ms / query time = single connection could handle req/sec
# ===============================
spring.datasource.hikari.autoCommit=${HIKARI_AUTO_COMMIT:true}
spring.datasource.hikari.connectionTimeout=${HIKARI_CONNECTION_TIMEOUT:30000}   #maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.idleTimeout=${HIKARI_IDLE_TIMEOUT:30000}               #maximum idle time for connection
spring.datasource.hikari.keepaliveTime=${HIKARI_KEEP_ALIVE_TIME:30000}          #time attempt to keep a connection alive
spring.datasource.hikari.maxLifetime=${HIKARI_MAX_LIFETIME:30000}               #maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.minimumIdle=${HIKARI_MINIMUM_IDLE:10}                  #minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.maximumPoolSize=${HIKARI_MAXIMUM_POOL_SIZE:20}         #maximum pool size
spring.datasource.hikari.poolName=${HIKARI_POOL_NAME:API-POOL}                  #connection pool name

# ===============================
# SPRING MAIL SERVER
# ===============================
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:crmsystem.sender@gmail.com}
spring.mail.password=${MAIL_PASSWORD:mkwcalqvyssuszab}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.port=25
spring.mail.properties.mail.smtp.starttls.required=true

# For version 2.6.x
spring.main.allow-circular-references=true
